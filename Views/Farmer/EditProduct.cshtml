@model AgroBazaar.Models.Entities.Product

@{
    ViewData["Title"] = "Edit Product - Farmer Dashboard";
}

<div class="row">
    <div class="col-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-action="Dashboard">Dashboard</a></li>
                <li class="breadcrumb-item"><a asp-action="Products">Products</a></li>
                <li class="breadcrumb-item active">Edit Product</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row">
    <div class="col-md-8 offset-md-2">
        <div class="card">
            <div class="card-header">
                <h4><i class="fas fa-edit text-primary"></i> Edit Product</h4>
            </div>
            <div class="card-body">
                <form asp-action="EditProduct" method="post" enctype="multipart/form-data">
                    <input asp-for="Id" type="hidden">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Name" class="form-label">Product Name <span class="text-danger">*</span></label>
                                <input asp-for="Name" class="form-control" placeholder="e.g., Fresh Organic Tomatoes">
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="CategoryId" class="form-label">Category <span class="text-danger">*</span></label>
                                <select asp-for="CategoryId" class="form-select" asp-items="ViewBag.Categories">
                                    <option value="">Select Category</option>
                                </select>
                                <span asp-validation-for="CategoryId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">Description</label>
                        <textarea asp-for="Description" class="form-control" rows="3" placeholder="Describe your product, its quality, farming methods, etc."></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="Price" class="form-label">Price (₹) <span class="text-danger">*</span></label>
                                <input asp-for="Price" class="form-control" type="number" step="0.01" min="0" placeholder="0.00">
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="QuantityAvailable" class="form-label">Stock Quantity <span class="text-danger">*</span></label>
                                <input asp-for="QuantityAvailable" class="form-control" type="number" min="0" placeholder="0">
                                <span asp-validation-for="QuantityAvailable" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="Unit" class="form-label">Unit <span class="text-danger">*</span></label>
                                <select asp-for="Unit" class="form-select">
                                    <option value="">Select Unit</option>
                                    <option value="kg">Kilogram (kg)</option>
                                    <option value="g">Gram (g)</option>
                                    <option value="piece">Piece</option>
                                    <option value="dozen">Dozen</option>
                                    <option value="liter">Liter</option>
                                    <option value="ml">Milliliter (ml)</option>
                                    <option value="bundle">Bundle</option>
                                    <option value="box">Box</option>
                                </select>
                                <span asp-validation-for="Unit" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <!-- Current Image Display -->
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <div class="mb-3">
                            <label class="form-label">Current Image</label>
                            <div class="border rounded p-2">
                                <img src="@Model.ImageUrl" alt="@Model.Name" class="img-fluid" style="max-height: 200px;">
                            </div>
                        </div>
                    }

                    <div class="mb-3">
                        <label for="imageFile" class="form-label">
                            @(string.IsNullOrEmpty(Model.ImageUrl) ? "Product Image" : "Change Product Image")
                        </label>
                        <input type="file" class="form-control" id="imageFile" name="imageFile" accept="image/*" onchange="previewImage(this)">
                        <div class="form-text">
                            @if (string.IsNullOrEmpty(Model.ImageUrl))
                            {
                                <span>Upload a clear image of your product. Supported formats: JPG, PNG, GIF (Max: 5MB)</span>
                            }
                            else
                            {
                                <span>Leave empty to keep current image. Upload new image to replace current one.</span>
                            }
                        </div>
                    </div>

                    <div class="mb-3" id="imagePreview" style="display: none;">
                        <label class="form-label">New Image Preview</label>
                        <div class="border rounded p-2">
                            <img id="preview" src="" alt="Preview" class="img-fluid" style="max-height: 200px;">
                        </div>
                    </div>

                    <div class="mb-3 form-check">
                        <input asp-for="IsActive" class="form-check-input" type="checkbox">
                        <label asp-for="IsActive" class="form-check-label">
                            Product is active and available for sale
                        </label>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a asp-action="Products" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left"></i> Back to Products
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Update Product
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function previewImage(input) {
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    $('#preview').attr('src', e.target.result);
                    $('#imagePreview').show();
                }
                reader.readAsDataURL(input.files[0]);
            } else {
                $('#imagePreview').hide();
            }
        }

        // Real-time price formatting
        $('input[name="Price"]').on('input', function() {
            let value = $(this).val();
            if (value) {
                $(this).siblings('.price-display').remove();
                $(this).parent().append(`<small class="text-muted price-display">₹${parseFloat(value).toFixed(2)}</small>`);
            }
        });

        // Form validation enhancement
        $('form').on('submit', function(e) {
            let isValid = true;
            
            // Check required fields
            $('input[required], select[required]').each(function() {
                if (!$(this).val()) {
                    isValid = false;
                    $(this).addClass('is-invalid');
                } else {
                    $(this).removeClass('is-invalid');
                }
            });

            // Validate price
            const price = parseFloat($('input[name="Price"]').val());
            if (price <= 0) {
                isValid = false;
                $('input[name="Price"]').addClass('is-invalid');
                alert('Price must be greater than 0');
            }

            // Validate quantity
            const quantity = parseInt($('input[name="QuantityAvailable"]').val());
            if (quantity < 0) {
                isValid = false;
                $('input[name="QuantityAvailable"]').addClass('is-invalid');
                alert('Quantity cannot be negative');
            }

            if (!isValid) {
                e.preventDefault();
            }
        });

        // Display current price on load
        $(document).ready(function() {
            const currentPrice = $('input[name="Price"]').val();
            if (currentPrice) {
                $('input[name="Price"]').parent().append(`<small class="text-muted price-display">₹${parseFloat(currentPrice).toFixed(2)}</small>`);
            }
        });
    </script>
}
