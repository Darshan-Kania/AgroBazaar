@model AgroBazaar.Models.Entities.Cart

@{
    ViewData["Title"] = "Shopping Cart - AgroBazaar";
}

<div class="row">
    <div class="col-12">
        <h2><i class="fas fa-shopping-cart text-success"></i> Shopping Cart</h2>
    </div>
</div>

@if (Model != null && Model.CartItems.Any())
{
    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5>Cart Items (@Model.CartItems.Count())</h5>
                </div>
                <div class="card-body p-0">
                    @foreach (var item in Model.CartItems)
                    {
                        <div class="cart-item p-3 border-bottom" id="cart-item-@item.ProductId">
                            <div class="row align-items-center">
                                <div class="col-md-2">
                                    @if (!string.IsNullOrEmpty(item.Product.ImageUrl))
                                    {
                                        <img src="@item.Product.ImageUrl" alt="@item.Product.Name" class="img-fluid rounded" style="max-height: 80px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="bg-light d-flex align-items-center justify-content-center rounded" style="height: 80px;">
                                            <i class="fas fa-image text-muted"></i>
                                        </div>
                                    }
                                </div>
                                <div class="col-md-4">
                                    <h6 class="mb-1">@item.Product.Name</h6>
                                    <small class="text-muted">By @item.Product.Farmer.FirstName @item.Product.Farmer.LastName</small><br>
                                    <small class="text-muted">@item.Product.Category.Name</small>
                                </div>
                                <div class="col-md-2">
                                    <strong>₹@item.UnitPrice.ToString("N2")</strong><br>
                                    <small class="text-muted">per @item.Product.Unit</small>
                                </div>
                                <div class="col-md-2">
                                    <div class="input-group input-group-sm">
                                        <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(@item.ProductId, @item.Quantity - 1)">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <input type="number" class="form-control text-center" id="qty-@item.ProductId" value="@item.Quantity" min="1" max="@item.Product.QuantityAvailable" onchange="updateQuantity(@item.ProductId, this.value)">
                                        <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(@item.ProductId, @item.Quantity + 1)">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                    <small class="text-muted">Max: @item.Product.QuantityAvailable</small>
                                </div>
                                <div class="col-md-1">
                                    <strong id="item-total-@item.ProductId">₹@((item.UnitPrice * item.Quantity).ToString("N2"))</strong>
                                </div>
                                <div class="col-md-1 text-end">
                                    <button class="btn btn-outline-danger btn-sm" onclick="removeFromCart(@item.ProductId)" title="Remove from cart">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="mt-3">
                <a asp-action="Products" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left"></i> Continue Shopping
                </a>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5>Order Summary</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-2">
                        <span>Subtotal:</span>
                        <strong id="cart-subtotal">₹@Model.CartItems.Sum(i => i.UnitPrice * i.Quantity).ToString("N2")</strong>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Delivery:</span>
                        <span class="text-success">Free</span>
                    </div>
                    <hr>
                    <div class="d-flex justify-content-between mb-3">
                        <strong>Total:</strong>
                        <strong id="cart-total" class="text-success">₹@Model.CartItems.Sum(i => i.UnitPrice * i.Quantity).ToString("N2")</strong>
                    </div>

                    <div class="d-grid gap-2">
                        <a asp-action="Checkout" class="btn btn-success btn-lg">
                            <i class="fas fa-credit-card"></i> Proceed to Checkout
                        </a>
                        <button class="btn btn-outline-warning" onclick="clearCart()">
                            <i class="fas fa-trash"></i> Clear Cart
                        </button>
                    </div>
                </div>
            </div>

            <!-- Delivery Info -->
            <div class="card mt-3">
                <div class="card-body">
                    <h6><i class="fas fa-truck text-success"></i> Delivery Information</h6>
                    <ul class="list-unstyled mb-0 small">
                        <li><i class="fas fa-check text-success"></i> Free delivery on all orders</li>
                        <li><i class="fas fa-check text-success"></i> Fresh products direct from farms</li>
                        <li><i class="fas fa-check text-success"></i> 2-3 days delivery time</li>
                        <li><i class="fas fa-check text-success"></i> Quality guaranteed</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body text-center py-5">
                    <i class="fas fa-shopping-cart fa-4x text-muted mb-4"></i>
                    <h4 class="text-muted">Your cart is empty</h4>
                    <p class="text-muted mb-4">Add some products to your cart to continue shopping.</p>
                    <a asp-action="Products" class="btn btn-success btn-lg">
                        <i class="fas fa-shopping-bag"></i> Start Shopping
                    </a>
                </div>
            </div>
        </div>
    </div>
}

<!-- Clear Cart Confirmation Modal -->
<div class="modal fade" id="clearCartModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Clear Cart</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to clear all items from your cart? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-warning" id="confirmClearCart">Clear Cart</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateQuantity(productId, newQuantity) {
            newQuantity = parseInt(newQuantity);
            
            if (newQuantity < 1) {
                removeFromCart(productId);
                return;
            }

            const maxQty = parseInt($('#qty-' + productId).attr('max'));
            if (newQuantity > maxQty) {
                showAlert('warning', 'Maximum available quantity is ' + maxQty);
                $('#qty-' + productId).val(maxQty);
                return;
            }

            $.ajax({
                url: '@Url.Action("UpdateCartItem", "Consumer")',
                type: 'POST',
                data: {
                    productId: productId,
                    quantity: newQuantity,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        $('#qty-' + productId).val(newQuantity);
                        updateItemTotal(productId, newQuantity);
                        updateCartTotals(response.cartTotal);
                    } else {
                        showAlert('danger', response.message);
                    }
                },
                error: function() {
                    showAlert('danger', 'Error updating cart item.');
                }
            });
        }

        function removeFromCart(productId) {
            $.ajax({
                url: '@Url.Action("RemoveFromCart", "Consumer")',
                type: 'POST',
                data: {
                    productId: productId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        $('#cart-item-' + productId).fadeOut(function() {
                            $(this).remove();
                            updateCartTotals(response.cartTotal);
                            updateCartCount(response.cartItemCount);
                            
                            // Check if cart is empty
                            if (response.cartItemCount === 0) {
                                location.reload();
                            }
                        });
                        showAlert('success', 'Item removed from cart');
                    } else {
                        showAlert('danger', response.message);
                    }
                },
                error: function() {
                    showAlert('danger', 'Error removing item from cart.');
                }
            });
        }

        function updateItemTotal(productId, quantity) {
            const unitPrice = parseFloat($('#cart-item-' + productId).find('.col-md-2:eq(1) strong').text().replace('₹', '').replace(',', ''));
            const itemTotal = unitPrice * quantity;
            $('#item-total-' + productId).text('₹' + itemTotal.toFixed(2));
        }

        function updateCartTotals(newTotal) {
            $('#cart-subtotal').text('₹' + parseFloat(newTotal).toFixed(2));
            $('#cart-total').text('₹' + parseFloat(newTotal).toFixed(2));
        }

        function updateCartCount(count) {
            $('.cart-count').text(count);
            if (count > 0) {
                $('.cart-count').show();
            } else {
                $('.cart-count').hide();
            }
        }

        function clearCart() {
            $('#clearCartModal').modal('show');
        }

        $('#confirmClearCart').click(function() {
            // Clear all items one by one
            $('.cart-item').each(function() {
                const productId = $(this).attr('id').replace('cart-item-', '');
                removeFromCart(parseInt(productId));
            });
            $('#clearCartModal').modal('hide');
        });

        function showAlert(type, message) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'warning' ? 'exclamation-triangle' : 'exclamation-circle'}"></i> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            
            $('.alert').remove();
            $('.row:first').before(alertHtml);
            
            setTimeout(function() {
                $('.alert').fadeOut();
            }, 3000);
        }
    </script>
}

<style>
    .cart-item {
        transition: all 0.3s ease;
    }

    .cart-item:hover {
        background-color: #f8f9fa;
    }

    .input-group-sm .form-control {
        width: 60px;
    }
</style>
