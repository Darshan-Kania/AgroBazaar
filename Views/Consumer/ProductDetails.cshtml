@model AgroBazaar.Models.Entities.Product

@{
    ViewData["Title"] = $"{Model.Name} - Product Details";
}

<div class="row">
    <div class="col-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-action="Dashboard">Home</a></li>
                <li class="breadcrumb-item"><a asp-action="Products">Products</a></li>
                <li class="breadcrumb-item"><a asp-action="Products" asp-route-categoryId="@Model.CategoryId">@Model.Category.Name</a></li>
                <li class="breadcrumb-item active">@Model.Name</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <!-- Product Image -->
        <div class="card">
            <div class="card-body p-0">
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="@Model.ImageUrl" alt="@Model.Name" class="img-fluid w-100" style="max-height: 400px; object-fit: cover;">
                }
                else
                {
                    <div class="bg-light d-flex align-items-center justify-content-center" style="height: 400px;">
                        <i class="fas fa-image fa-5x text-muted"></i>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <!-- Product Details -->
        <div class="card h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-start mb-2">
                    <h2 class="card-title mb-0">@Model.Name</h2>
                    @{ string badgeClass = Model.QuantityAvailable > 10 ? "bg-success" : Model.QuantityAvailable > 0 ? "bg-warning" : "bg-danger"; }
                    <span class="badge @badgeClass fs-6">
                        @(Model.QuantityAvailable > 0 ? "In Stock" : "Out of Stock")
                    </span>
                </div>
                <div class="mb-2">
                    <span class="badge bg-secondary">@Model.Category.Name</span>
                    <span class="ms-2">
                        <i class="fas fa-star text-warning"></i>
                        <strong>@(Math.Round((double)(ViewBag.AverageRating ?? 0.0), 1))</strong>
                        <small class="text-muted">avg</small>
                    </span>
                </div>
                <div class="mb-3">
                    <h3 class="text-success">₹@Model.Price.ToString("N2") <small class="text-muted">per @Model.Unit</small></h3>
                </div>

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="mb-4">
                        <h5>Description</h5>
                        <p class="text-muted">@Model.Description</p>
                    </div>
                }

                <div class="mb-4">
                    <h5>Farmer Information</h5>
                    <div class="d-flex align-items-center">
                        <div class="bg-success text-white rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 50px; height: 50px;">
                            <i class="fas fa-user"></i>
                        </div>
                        <div>
                            <h6 class="mb-0">@Model.Farmer.FirstName @Model.Farmer.LastName</h6>
                            <small class="text-muted">Verified Farmer</small>
                        </div>
                    </div>
                </div>

                <div class="mb-4">
                    <div class="row">
                        <div class="col-6">
                            <strong>Available Quantity:</strong><br>
                            <span class="text-success">@Model.QuantityAvailable @Model.Unit</span>
                        </div>
                        <div class="col-6">
                            <strong>Listed On:</strong><br>
                            <span class="text-muted">@Model.CreatedAt.ToString("dd MMM yyyy")</span>
                        </div>
                    </div>
                </div>

                @if (Model.QuantityAvailable > 0)
                {
                    <div class="mb-4">
                        <div class="row align-items-end">
                            <div class="col-4">
                                <label class="form-label">Quantity</label>
                                <input type="number" id="quantity" class="form-control" value="1" min="1" max="@Model.QuantityAvailable">
                            </div>
                            <div class="col-8">
                                <button class="btn btn-success btn-lg w-100" onclick="addToCartWithQuantity(@Model.Id)">
                                    <i class="fas fa-cart-plus"></i> Add to Cart
                                </button>
                            </div>
                        </div>
                        <div class="mt-2">
                            <small class="text-muted">Total: ₹<span id="totalPrice">@Model.Price.ToString("N2")</span></small>
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle"></i> This product is currently out of stock.
                    </div>
                }

                <div class="d-flex gap-2">
                    <a asp-action="Products" class="btn btn-outline-secondary flex-grow-1">
                        <i class="fas fa-arrow-left"></i> Back to Products
                    </a>
                    <button class="btn btn-outline-primary" onclick="shareProduct()">
                        <i class="fas fa-share-alt"></i> Share
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Ratings Section -->
<div class="row mt-5">
    <div class="col-lg-8">
        <div class="card mb-3">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="fas fa-star text-warning"></i> Ratings & Reviews</h5>
                <span class="text-muted">Average: <strong>@(Math.Round((double)(ViewBag.AverageRating ?? 0.0), 1))</strong> / 5</span>
            </div>
            <div class="card-body">
                @{
                    var ratings = ViewBag.Ratings as IEnumerable<AgroBazaar.Models.Entities.ProductRating>;
                }
                @if (ratings != null && ratings.Any())
                {
                    foreach (var r in ratings)
                    {
                        <div class="border-bottom pb-2 mb-2">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-user-circle me-2 text-muted"></i>
                                <strong>@r.User?.FirstName @r.User?.LastName</strong>
                                <span class="ms-2 badge bg-warning text-dark">@r.Rating <i class="fas fa-star"></i></span>
                                <small class="ms-2 text-muted">@r.CreatedAt.ToString("dd MMM yyyy")</small>
                            </div>
                            @if (!string.IsNullOrEmpty(r.Comment))
                            {
                                <div class="mt-1 text-muted">@r.Comment</div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="text-muted">No reviews yet. Be the first to review!</div>
                }
            </div>
        </div>

        @if (ViewBag.CanRate == true)
        {
            var userRating = ViewBag.UserRating as AgroBazaar.Models.Entities.ProductRating;
            <div class="card">
                <div class="card-header">
                    <strong>@(userRating == null ? "Write a Review" : "Update Your Review")</strong>
                </div>
                <div class="card-body">
                    <form asp-action="RateProduct" method="post">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        <div class="row g-3">
                            <div class="col-md-3">
                                <label class="form-label">Rating</label>
                                <select class="form-select" name="rating" required>
                                    @for (int i = 5; i >= 1; i--)
                                    {
                                        <option value="@i" selected="@(userRating?.Rating == i)">@i</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-9">
                                <label class="form-label">Comment (optional)</label>
                                <textarea class="form-control" name="comment" rows="2">@userRating?.Comment</textarea>
                            </div>
                        </div>
                        <div class="mt-3">
                            <button type="submit" class="btn btn-warning"><i class="fas fa-paper-plane"></i> Submit Review</button>
                        </div>
                    </form>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <i class="fas fa-info-circle"></i> You can rate this product after purchasing it.
            </div>
        }
    </div>
</div>

<!-- Related Products -->
@{
    var relatedProducts = ViewBag.RelatedProducts as IEnumerable<AgroBazaar.Models.Entities.Product>;
}
@if (relatedProducts != null && relatedProducts.Any())
{
    <div class="row mt-5">
        <div class="col-12">
            <h4>Related Products</h4>
            <div class="row">
                @foreach (var product in relatedProducts)
                {
                    <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                        <div class="card h-100 product-card">
                            <div class="position-relative">
                                @if (!string.IsNullOrEmpty(product.ImageUrl))
                                {
                                    <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="height: 150px; object-fit: cover;">
                                }
                                else
                                {
                                    <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 150px;">
                                        <i class="fas fa-image fa-2x text-muted"></i>
                                    </div>
                                }
                                <span class="badge bg-success position-absolute top-0 end-0 m-2">₹@product.Price/@product.Unit</span>
                            </div>
                            <div class="card-body">
                                <h6 class="card-title">@product.Name</h6>
                                <p class="card-text text-muted small">
                                    @if (!string.IsNullOrEmpty(product.Description))
                                    {
                                        @(product.Description.Length > 50 ? product.Description.Substring(0, 50) + "..." : product.Description)
                                    }
                                </p>
                                <div class="d-flex gap-2">
                                    <a asp-action="ProductDetails" asp-route-id="@product.Id" class="btn btn-outline-primary btn-sm flex-grow-1">
                                        View Details
                                    </a>
                                    <button class="btn btn-success btn-sm" onclick="addToCart(@product.Id)">
                                        <i class="fas fa-cart-plus"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        const unitPrice = @Model.Price;

        // Update total price when quantity changes
        $('#quantity').on('input', function() {
            const quantity = parseInt($(this).val()) || 1;
            const total = unitPrice * quantity;
            $('#totalPrice').text(total.toFixed(2));
        });

        function addToCartWithQuantity(productId) {
            const quantity = parseInt($('#quantity').val()) || 1;
            $.ajax({
                url: '@Url.Action("AddToCart", "Consumer")',
                type: 'POST',
                data: { productId: productId, quantity: quantity },
                success: function(response) {
                    if (response.success) {
                        showAlert('success', response.message);
                        updateCartCount(response.cartItemCount);
                    } else {
                        showAlert('danger', response.message);
                    }
                },
                error: function() {
                    showAlert('danger', 'Error adding item to cart. Please try again.');
                }
            });
        }

        function addToCart(productId) {
            $.ajax({
                url: '@Url.Action("AddToCart", "Consumer")',
                type: 'POST',
                data: { productId: productId, quantity: 1 },
                success: function(response) {
                    if (response.success) {
                        showAlert('success', response.message);
                        updateCartCount(response.cartItemCount);
                    } else {
                        showAlert('danger', response.message);
                    }
                },
                error: function() {
                    showAlert('danger', 'Error adding item to cart. Please try again.');
                }
            });
        }

        function updateCartCount(count) {
            $('.cart-count').text(count);
            if (count > 0) {
                $('.cart-count').show();
            }
        }

        function shareProduct() {
            if (navigator.share) {
                navigator.share({
                    title: '@Model.Name',
                    text: '@Model.Description',
                    url: window.location.href
                });
            } else {
                navigator.clipboard.writeText(window.location.href).then(function() {
                    showAlert('success', 'Product link copied to clipboard!');
                });
            }
        }

        function showAlert(type, message) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            
            $('.alert:not(.alert-warning)').remove();
            $('.row:first').before(alertHtml);
            
            setTimeout(function() {
                $('.alert-success, .alert-danger').fadeOut();
            }, 3000);
        }
    </script>
}

<style>
    .product-card { transition: transform 0.2s; }
    .product-card:hover { transform: translateY(-3px); box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
</style>
